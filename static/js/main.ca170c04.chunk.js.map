{"version":3,"sources":["components/Article.js","components/Headline.js","components/Calendar.js","components/Controls.js","components/Header.js","components/NewsArticles.js","App.js","components/About.js","serviceWorker.js","index.js"],"names":["Article","articleContent","this","props","content","substring","lastSpaceAt","lastIndexOf","react_default","a","createElement","className","style","backgroundImage","concat","image","src","alt","title","source","time","href","url","target","rel","Component","Headline","firstLetter","match","join","toUpperCase","Calendar","state","dayName","undefined","month","dayNumber","year","now","Date","toString","setState","Controls","onChangeCountry","e","preventDefault","country","value","_this","updateCountry","onChangeSource","updateSource","onChangeCategory","category","dataset","updateCategory","onClick","data-category","id","name","onChange","Header","NewsArticles","articles","headlines","previousCountry","_callee","newCountry","regenerator_default","wrap","_context","prev","next","bringArticles","stop","_callee2","newSource","_context2","_callee3","newCategory","_context3","console","log","_callee4","articleArray","headlineArray","api_call","data","_context4","fetch","sent","json","forEach","article","contentString","timeString","publishedAt","urlToImage","oneArticle","components_Article","key","push","components_Headline","componentDidMount","components_Header","components_Controls","components_Calendar","App","height","position","components_NewsArticles","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca170c04.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../components/article.css';\r\n\r\n\r\nclass Article extends Component {\r\n    \r\n\r\n    render(){\r\n        // show only part of content and always end with 'space' not mid-word\r\n        const articleContent = this.props.content.substring(0,230); //remove the last space as every article.content ends with space\r\n        const lastSpaceAt = articleContent.lastIndexOf(\" \");        //determine last space in that substring\r\n        const content = articleContent.substring(0, lastSpaceAt) + '...'; //cut the string where the space is\r\n        //console.log(content.length);\r\n\r\n        return(\r\n            <div className=\"article\">\r\n                <header style={{backgroundImage: `url(${this.props.image})`}}>\r\n                    <img src={this.props.image} alt='' />\r\n                    <h5>{this.props.title}</h5>\r\n                    <div className='subheader'>\r\n                        <span className='articleSource'>source: {this.props.source}</span>\r\n                        <span className='articleTime'>{this.props.time}</span>\r\n                    </div>\r\n                </header>\r\n                <p>{content} <a href={this.props.url} target='_blank' rel=\"noopener noreferrer\">full article</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article;","import React, { Component } from 'react';\r\nimport './headline.css';\r\n\r\n\r\nclass Headline extends Component {\r\n\r\n    render(){\r\n        let firstLetter = this.props.title.match(/[a-zA-Z]/).join('').toUpperCase().substring(0,1);\r\n        return(\r\n            <div className=\"headline\">\r\n            <a href={this.props.url} target='_blank' rel=\"noopener noreferrer\"><span className='firstLetter'>{firstLetter}</span><p>{this.props.title}</p></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Headline;","import React, { Component } from 'react';\r\nimport './calendar.css';\r\n\r\nclass Calendar extends Component {\r\n    state = {\r\n        dayName: undefined,\r\n        month: undefined,\r\n        dayNumber: undefined,\r\n        year: undefined\r\n        \r\n    }    \r\n    componentDidMount(){\r\n        // get current date\r\n        let now = new Date().toString().substring(0,15);\r\n        //console.log(now);\r\n        let dayName = now.substring(0,3);\r\n        if (dayName === 'Mon'){\r\n            dayName = 'Monday';\r\n        }if (dayName === 'Tue'){\r\n            dayName = 'Tuesday';\r\n        }if (dayName === 'Wed'){\r\n            dayName = 'Wednesday';\r\n        }if (dayName === 'Thu'){\r\n            dayName = 'Thursday';\r\n        }if (dayName === 'Fri'){\r\n            dayName = 'Friday';\r\n        }if (dayName === 'Sat'){\r\n            dayName = 'Saturday';\r\n        }if (dayName === 'Sun'){\r\n            dayName = 'Sunday';\r\n        }\r\n        let month = now.substring(4,7);\r\n        let dayNumber = now.substring(8,10);\r\n        let year = now.substring(11,15);\r\n        this.setState({\r\n            dayName: dayName,\r\n            month: month,\r\n            dayNumber: dayNumber,\r\n            year: year\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"calendar\">\r\n                <span>{this.state.month}</span>\r\n                <span>{this.state.dayNumber}</span>\r\n                <span>{this.state.dayName}</span>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from 'react';\r\nimport './controls.css';\r\n\r\nclass Controls extends Component {\r\n    \r\n    onChangeCountry = (e) => {\r\n        e.preventDefault();\r\n        let country = e.target.value;\r\n        this.props.updateCountry(country);\r\n    }\r\n    onChangeSource = (e) => {\r\n        e.preventDefault();\r\n        let source = e.target.value;\r\n        this.props.updateSource(source);\r\n        //document.getElementById('countrySelector').setAttribute(\"value\", \"gb\");\r\n    }\r\n    onChangeCategory = (e) => {\r\n        e.preventDefault();\r\n        let category = e.target.dataset.category;\r\n        this.props.updateCategory(category);\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className='controls'>\r\n                <div className=\"navigation\">\r\n                    <ul>\r\n                        <li onClick={this.onChangeCategory} data-category='top-headlines'>Headlines</li>\r\n                        <li onClick={this.onChangeCategory} data-category='business'>Business</li>\r\n                        <li onClick={this.onChangeCategory} data-category='entertainment'>Entertainment</li>\r\n                        <li onClick={this.onChangeCategory} data-category='health'>Health</li>\r\n                        <li onClick={this.onChangeCategory} data-category='science'>Science</li>\r\n                        <li onClick={this.onChangeCategory} data-category='sports'>Sports</li>\r\n                        <li onClick={this.onChangeCategory} data-category='technology'>Technology</li>\r\n                    </ul>\r\n                </div>\r\n                <select id='countrySelector' name=\"coutries\"  onChange={this.onChangeCountry}>\r\n                    <option value=\"gb\">United Kingdom</option>\r\n                    <option value=\"us\">United States</option>\r\n                    <option value=\"fr\">France</option>\r\n                    <option value=\"it\">Italy</option>\r\n                </select>\r\n                <select name=\"sources\" onChange={this.onChangeSource}>\r\n                <option value=\"\">All sources</option>\r\n                    <option value=\"ign\">IGN</option>\r\n                    <option value=\"new-scientist\">New Scientist</option>\r\n                    <option value=\"wired\">Wired</option>\r\n                    <option value=\"mtv-news\">MTV News</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controls;","import React, { Component } from 'react';\r\nimport '../components/header.css';\r\n\r\n\r\nclass Header extends Component {\r\n    \r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"header\">\r\n                <h1>Live News</h1>\r\n                <img src='../planet.png' alt='planet' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\nimport Header from './Header';\r\n//import Navigation from './Navigation';\r\n\r\nclass NewsArticles extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({category: '', source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({category: '', source: 'sources=' + newSource, country:''});\r\n            this.bringArticles();\r\n        }\r\n    \r\n    };\r\n    updateCategory = async (newCategory) => {\r\n        console.log(newCategory);\r\n        if (newCategory === 'top-headlines'){\r\n            await this.setState({category: '', country: this.state.previousCountry, source: '' });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({category: '&category=' + newCategory, country: this.state.previousCountry, source: '' });\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n        console.log(url);\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return( \r\n            <div>\r\n            <Header/ >\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource} updateCategory={this.updateCategory}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a className='apiRef' href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewsArticles;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Drawer, Navigation, Content, Header} from 'react-mdl';\nimport Main from './components/Main';\nimport { Link } from 'react-router-dom';\nimport NewsArticles from './components/NewsArticles';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{height: '100vh', position: 'relative'}}>\n            <NewsArticles />\n    \n        </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nclass About extends Component {\r\n    render(){\r\n        return(\r\n            <div className='aboutPageContent'>\r\n                <p>About page under construction</p>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}