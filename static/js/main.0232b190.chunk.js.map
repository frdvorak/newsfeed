{"version":3,"sources":["components/Article.js","components/Headline.js","components/Calendar.js","components/Controls.js","components/TopHeadlines.js","components/Business.js","components/Entertainment.js","components/Health.js","components/Science.js","components/Sports.js","components/Technology.js","components/About.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Article","articleContent","str","i","length","spaceAt","substring","endsWith","this","props","content","react_default","a","createElement","className","style","backgroundImage","concat","image","src","alt","title","source","time","href","url","target","rel","Component","Headline","firstLetter","match","join","toUpperCase","Calendar","state","dayName","undefined","month","dayNumber","year","now","Date","toString","setState","Controls","onChangeCountry","e","preventDefault","country","value","_this","updateCountry","onChangeSource","updateSource","id","name","onChange","Newspage","articles","headlines","category","previousCountry","_callee","newCountry","regenerator_default","wrap","_context","prev","next","bringArticles","stop","_callee2","newSource","_context2","_callee3","articleArray","headlineArray","api_call","_context3","fetch","sent","json","forEach","article","contentString","timeString","publishedAt","urlToImage","oneArticle","components_Article","key","push","components_Headline","componentDidMount","components_Controls","components_Calendar","Business","console","log","Entertainment","data","Health","Science","Sports","Technology","About","Main","Switch","Redirect","exact","from","to","Route","path","component","TopHeadlines","App","height","position","lib","scroll","Link","components_Main","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0232b190.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../components/article.css';\r\n\r\n\r\nclass Article extends Component {\r\n    \r\n\r\n    render(){\r\n        // adjust substring coming from this.props.content to end with space, not mid-word\r\n        function endsWith(str){\r\n            let charCount = 20; // remove this many characters from the string and find a space there\r\n            for(let i=str.length-charCount; i<str.length; i++){\r\n                if(str[i]===' '){       //if we find a space, set variable spaceAt to that value\r\n                    var spaceAt = i;    // needs to be VAR not LET, we need function scoped\r\n                }else{\r\n                    i++;\r\n                }\r\n            }\r\n            return str.substring(0, spaceAt)+ '...'; //cut the string where the space is\r\n        }\r\n        const articleContent = endsWith(this.props.content);\r\n\r\n        return(\r\n            <div className=\"article\">\r\n                <header style={{backgroundImage: `url(${this.props.image})`}}>\r\n                    <img src={this.props.image} alt='' />\r\n                    <h5>{this.props.title}</h5>\r\n                    <div className='subheader'>\r\n                        <span className='articleSource'>source: {this.props.source}</span>\r\n                        <span className='articleTime'>{this.props.time}</span>\r\n                    </div>\r\n                </header>\r\n                <p>{articleContent} <a href={this.props.url} target='_blank' rel=\"noopener noreferrer\">full article</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article;","import React, { Component } from 'react';\r\nimport './headline.css';\r\n\r\n\r\nclass Headline extends Component {\r\n\r\n    render(){\r\n        let firstLetter = this.props.title.match(/[a-zA-Z]/).join('').toUpperCase().substring(0,1);\r\n        return(\r\n            <div className=\"headline\">\r\n            <a href={this.props.url} target='_blank' rel=\"noopener noreferrer\"><span className='firstLetter'>{firstLetter}</span><p>{this.props.title}</p></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Headline;","import React, { Component } from 'react';\r\nimport './calendar.css';\r\n\r\nclass Calendar extends Component {\r\n    state = {\r\n        dayName: undefined,\r\n        month: undefined,\r\n        dayNumber: undefined,\r\n        year: undefined\r\n        \r\n    }    \r\n    componentDidMount(){\r\n        // get current date\r\n        let now = new Date().toString().substring(0,15);\r\n        //console.log(now);\r\n        let dayName = now.substring(0,3);\r\n        if (dayName === 'Mon'){\r\n            dayName = 'Monday';\r\n        }if (dayName === 'Tue'){\r\n            dayName = 'Tuesday';\r\n        }if (dayName === 'Wed'){\r\n            dayName = 'Wednesday';\r\n        }if (dayName === 'Thu'){\r\n            dayName = 'Thursday';\r\n        }if (dayName === 'Fri'){\r\n            dayName = 'Friday';\r\n        }if (dayName === 'Sat'){\r\n            dayName = 'Saturday';\r\n        }if (dayName === 'Sun'){\r\n            dayName = 'Sunday';\r\n        }\r\n        let month = now.substring(4,7);\r\n        let dayNumber = now.substring(8,10);\r\n        let year = now.substring(11,15);\r\n        this.setState({\r\n            dayName: dayName,\r\n            month: month,\r\n            dayNumber: dayNumber,\r\n            year: year\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"calendar\">\r\n                <span>{this.state.month}</span>\r\n                <span>{this.state.dayNumber}</span>\r\n                <span>{this.state.dayName}</span>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from 'react';\r\nimport './controls.css';\r\n\r\n\r\nclass Controls extends Component {\r\n    \r\n    onChangeCountry = (e) => {\r\n        e.preventDefault();\r\n        let country = e.target.value;\r\n        this.props.updateCountry(country);\r\n    }\r\n    onChangeSource = (e) => {\r\n        e.preventDefault();\r\n        let source = e.target.value;\r\n        this.props.updateSource(source);\r\n        //document.getElementById('countrySelector').setAttribute(\"value\", \"gb\");\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className='controls'>\r\n                <select id='countrySelector' name=\"coutries\"  onChange={this.onChangeCountry}>\r\n                    <option value=\"gb\">United Kingdom</option>\r\n                    <option value=\"us\">United States</option>\r\n                    <option value=\"fr\">France</option>\r\n                    <option value=\"it\">Italy</option>\r\n                </select>\r\n                <select name=\"sources\" onChange={this.onChangeSource}>\r\n                <option value=\"\">All sources</option>\r\n                    <option value=\"ign\">IGN</option>\r\n                    <option value=\"new-scientist\">New Scientist</option>\r\n                    <option value=\"wired\">Wired</option>\r\n                    <option value=\"mtv-news\">MTV News</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controls;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Newspage extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n        //console.log(url);\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Newspage;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Business extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=business',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        console.log(url);\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Business;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Entertainment extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=entertainment',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n        console.log(url);\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Entertainment;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Health extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=health',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Health;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Science extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=science',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Science;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Sports extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=sports',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category:''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sports;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Technology extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=technology',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n        console.log(url);\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Technology;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render(){\r\n        return(\r\n            <div className='aboutPageContent'>\r\n                <p>About page under construction</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport TopHeadlines from './TopHeadlines';\r\nimport Business from './Business';\r\nimport Entertainment from './Entertainment';\r\nimport Health from './Health';\r\nimport Science from './Science';\r\nimport Sports from './Sports';\r\nimport Technology from './Technology';\r\n\r\nimport About from './About';\r\n\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Redirect exact from=\"/\" to=\"/dashboard\" />\r\n        \r\n        <Route exact path=\"/dashboard\" component={TopHeadlines} />\r\n        <Route exact path=\"/newsfeed\" component={TopHeadlines} />\r\n        <Route exact path=\"/newsfeed/top-headlines\" component={TopHeadlines} />\r\n        <Route exact path=\"/newsfeed/business\" component={Business} />\r\n        <Route exact path=\"/newsfeed/entertainment\" component={Entertainment} />\r\n        <Route exact path=\"/newsfeed/health\" component={Health} />\r\n        <Route exact path=\"/newsfeed/science\" component={Science} />\r\n        <Route exact path=\"/newsfeed/sports\" component={Sports} />\r\n        <Route exact path=\"/newsfeed/technology\" component={Technology} />\r\n\r\n        <Route exact path=\"/about\" component={About} />\r\n\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Drawer, Navigation, Content, Header} from 'react-mdl';\nimport Main from './components/Main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <div style={{height: '100vh', position: 'relative'}}>\n        \n        <Layout>\n        <div className='header'>\n            <h1><strong>Live</strong> News</h1>\n            <img src='./planet.png' alt='planet'/>\n        </div>\n            <Header scroll>\n            \n                <Navigation>\n                    <Link to=\"/newsfeed/top-headlines\"><strong>Top</strong> headlines</Link>\n                    <Link to=\"/newsfeed/business\"><strong>B</strong>usiness</Link>\n                    <Link to=\"/newsfeed/entertainment\"><strong>E</strong>ntertainment</Link>\n                    <Link to=\"/newsfeed/health\"><strong>H</strong>ealth</Link>\n                    <Link to=\"/newsfeed/science\"><strong>S</strong>cience</Link>\n                    <Link to=\"/newsfeed/sports\"><strong>S</strong>ports</Link>\n                    <Link to=\"/newsfeed/technology\"><strong>T</strong>echnology</Link>\n                </Navigation>\n                \n            </Header>\n        <Drawer title=\"Live News\">\n            <Navigation>\n                <Link to=\"/newsfeed/top-headlines\"><strong>Top</strong> headlines</Link>\n                <Link to=\"/newsfeed/business\"><strong>B</strong>usiness</Link>\n                <Link to=\"/newsfeed/entertainment\"><strong>E</strong>ntertainment</Link>\n                <Link to=\"/newsfeed/health\"><strong>H</strong>ealth</Link>\n                <Link to=\"/newsfeed/science\"><strong>S</strong>cience</Link>\n                <Link to=\"/newsfeed/sports\"><strong>S</strong>ports</Link>\n                <Link to=\"/newsfeed/technology\"><strong>T</strong>echnology</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n          <Main />\n        </Content>\n    </Layout>\n</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}