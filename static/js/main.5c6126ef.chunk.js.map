{"version":3,"sources":["components/Article.js","components/Headline.js","components/Calendar.js","components/Controls.js","components/TopHeadlines.js","components/Business.js","components/Entertainment.js","components/Health.js","components/Science.js","components/Sports.js","components/Technology.js","components/About.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Article","react_default","a","createElement","className","style","backgroundImage","concat","this","props","image","src","alt","title","source","time","content","href","url","target","rel","Component","Headline","firstLetter","toUpperCase","substring","Calendar","state","dayName","undefined","month","dayNumber","year","now","Date","toString","setState","Controls","onChangeCountry","e","preventDefault","country","value","_this","updateCountry","onChangeSource","updateSource","id","name","onChange","Newspage","articles","headlines","category","previousCountry","_callee","newCountry","regenerator_default","wrap","_context","prev","next","bringArticles","stop","_callee2","newSource","_context2","_callee3","articleArray","headlineArray","api_call","data","_context3","fetch","sent","json","console","log","forEach","article","contentString","timeString","publishedAt","urlToImage","oneArticle","components_Article","key","push","components_Headline","componentDidMount","components_Controls","components_Calendar","Business","Entertainment","Health","Science","Sports","Technology","About","Main","Switch","Redirect","exact","from","to","Route","path","component","TopHeadlines","App","height","position","lib","scroll","Link","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c6126ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../components/article.css';\r\n\r\n\r\nclass Article extends Component {\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"article\">\r\n                <header style={{backgroundImage: `url(${this.props.image})`}}>\r\n                    <img src={this.props.image} alt='' />\r\n                    <h5>{this.props.title}</h5>\r\n                    <div className='subheader'>\r\n                        <span className='articleSource'>source: {this.props.source}</span>\r\n                        <span className='articleTime'>{this.props.time}</span>\r\n                    </div>\r\n                </header>\r\n               \r\n                <p>{this.props.content} <a href={this.props.url} target='_blank' rel=\"noopener noreferrer\">full article</a></p>\r\n                \r\n               \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article;","import React, { Component } from 'react';\r\nimport './headline.css';\r\n\r\n\r\nclass Headline extends Component {\r\n\r\n    render(){\r\n        let firstLetter = this.props.title.toUpperCase().substring(0,1);\r\n        return(\r\n            <div className=\"headline\">\r\n            <a href={this.props.url} target='_blank' rel=\"noopener noreferrer\"><span className='firstLetter'>{firstLetter}</span><p>{this.props.title}</p></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Headline;","import React, { Component } from 'react';\r\nimport './calendar.css';\r\n\r\nclass Calendar extends Component {\r\n    state = {\r\n        dayName: undefined,\r\n        month: undefined,\r\n        dayNumber: undefined,\r\n        year: undefined\r\n        \r\n    }    \r\n    componentDidMount(){\r\n        // get current date\r\n        let now = new Date().toString().substring(0,15);\r\n        \r\n        let dayName = now.substring(0,3);\r\n        let month = now.substring(4,7);\r\n        let dayNumber = now.substring(8,10);\r\n        let year = now.substring(11,15);\r\n        this.setState({\r\n            dayName: dayName,\r\n            month: month,\r\n            dayNumber: dayNumber,\r\n            year: year\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"calendar\">\r\n                <span>{this.state.month}</span>\r\n                <span>{this.state.dayNumber}</span>\r\n                <span>{this.state.dayName}</span>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from 'react';\r\nimport './controls.css';\r\n\r\n\r\nclass Controls extends Component {\r\n    \r\n    onChangeCountry = (e) => {\r\n        e.preventDefault();\r\n        let country = e.target.value;\r\n        this.props.updateCountry(country);\r\n    }\r\n    onChangeSource = (e) => {\r\n        e.preventDefault();\r\n        let source = e.target.value;\r\n        this.props.updateSource(source);\r\n        //document.getElementById('countrySelector').setAttribute(\"value\", \"gb\");\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className='controls'>\r\n                <select id='countrySelector' name=\"coutries\"  onChange={this.onChangeCountry}>\r\n                    <option value=\"gb\">United Kingdom</option>\r\n                    <option value=\"us\">United States</option>\r\n                    <option value=\"fr\">France</option>\r\n                    <option value=\"it\">Italy</option>\r\n                </select>\r\n                <select name=\"sources\" onChange={this.onChangeSource}>\r\n                <option value=\"\">All sources</option>\r\n                    <option value=\"ign\">IGN</option>\r\n                    <option value=\"new-scientist\">New Scientist</option>\r\n                    <option value=\"wired\">Wired</option>\r\n                    <option value=\"mtv-news\">MTV News</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controls;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Newspage extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n        console.log(url);\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Newspage;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Business extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=business',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        console.log(url);\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Business;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Entertainment extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=entertainment',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n        console.log(url);\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Entertainment;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Health extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=health',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Health;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Science extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=science',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Science;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Sports extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=sports',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category:''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sports;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar';\r\nimport Controls from './Controls';\r\n\r\nclass Technology extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n        country: 'country=gb',\r\n        category: '&category=technology',\r\n        source: '',\r\n        previousCountry: 'country=gb', // needed for when we select single source and return back to ALL sources, otherwise error\r\n    }\r\n    updateCountry = async (newCountry) => {\r\n        await this.setState({country: 'country=' + newCountry, previousCountry:'country=' + newCountry, source: '', category: ''});\r\n        this.bringArticles();\r\n    };\r\n    updateSource = async (newSource) => {\r\n        if (newSource === ''){\r\n            await this.setState({source: '', country: this.state.previousCountry });\r\n            this.bringArticles();\r\n        }\r\n        else {\r\n            await this.setState({source: 'sources=' + newSource, country:'', category: ''});\r\n            this.bringArticles();\r\n        }\r\n        \r\n    };\r\n    \r\n    bringArticles = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const url = 'https://newsapi.org/v2/top-headlines?'+ this.state.country + this.state.category + this.state.source +'&apiKey=09b4242d1a2847b1b520eeb23adabd9d';\r\n        const api_call = await fetch(url);\r\n        const data = await api_call.json();\r\n        console.log(url);\r\n                \r\n        // iterate through the data and push it into articleArray in state\r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n    \r\n\r\n    componentDidMount = () => {\r\n      this.bringArticles();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                \r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                </div>\r\n                <div className='rightCollumn'>\r\n                    <Controls updateCountry={this.updateCountry} updateSource={this.updateSource}/>\r\n                    <Calendar /> \r\n                    <div className='headlines'>\r\n                        {this.state.headlines}\r\n                        <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Technology;","import React, { Component } from 'react';\r\nimport Article from './Article';\r\nimport Headline from './Headline';\r\nimport Calendar from './Calendar'\r\n\r\nclass About extends Component {\r\n    state = {\r\n        articles: [],\r\n        headlines: [],\r\n    }\r\n    componentDidMount = async () => {\r\n        let articleArray = [];\r\n        let headlineArray = [];\r\n        let id = 1;\r\n\r\n\r\n        // call api, convert it to JSON, save that in variable 'data'\r\n        const api_call = await fetch('https://newsapi.org/v2/top-headlines?sources=ign&apiKey=09b4242d1a2847b1b520eeb23adabd9d');\r\n        const data = await api_call.json();\r\n        \r\n\r\n        // iterate through the data and push it into articleArray in state\r\n        \r\n        data.articles.forEach((article)=> {\r\n            \r\n            // change time into more readable string\r\n            let timeString = article.publishedAt.substring(0,10) + ' ' + article.publishedAt.substring(11,16);\r\n            \r\n            // show only first 250 charactes or articles content\r\n            let contentString;\r\n            if (article.content){\r\n                contentString = article.content.substring(0,250) + ' ...';\r\n            }\r\n\r\n            // filter latest articles that have an image\r\n            if ((article.urlToImage != null)&&(contentString)) {\r\n                let oneArticle = <Article key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                articleArray.push(oneArticle);\r\n            }\r\n            // filter latest articles that DONT have an image use the news for sidebar\r\n            else {\r\n                let oneArticle = <Headline key={id} title={article.title} time={timeString} source={article.source.name} \r\n                                url={article.url} content={contentString} image={article.urlToImage}/>;\r\n                headlineArray.push(oneArticle);\r\n                console.log(article.title);\r\n            }\r\n\r\n            id++;\r\n        })\r\n        this.setState({articles: articleArray, headlines:headlineArray});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='latestPageContent'>\r\n                <div className='leftCollumn'>\r\n                    {this.state.articles}\r\n                    \r\n                </div>\r\n                <div className='rightCollumn'>\r\n                <Calendar /> \r\n                <div className='headlines'>\r\n                    {this.state.headlines}\r\n                    <a href='https://newsapi.org/'>https://newsapi.org/</a>\r\n                </div>\r\n                \r\n                    \r\n                 \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport TopHeadlines from './TopHeadlines';\r\nimport Business from './Business';\r\nimport Entertainment from './Entertainment';\r\nimport Health from './Health';\r\nimport Science from './Science';\r\nimport Sports from './Sports';\r\nimport Technology from './Technology';\r\n\r\nimport About from './About';\r\n\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Redirect exact from=\"/\" to=\"/dashboard\" />\r\n        <Redirect exact from=\"https://frdvorak.github.io/newsfeed/\" to=\"/dashboard\" />\r\n        <Redirect exact from=\"https://frdvorak.github.io/newsfeed\" to=\"/dashboard\" />\r\n        <Route exact path=\"/dashboard\" component={TopHeadlines} />\r\n        <Route exact path=\"newsfeed/\" component={TopHeadlines} />\r\n        <Route exact path=\"newsfeed/top-headlines\" component={TopHeadlines} />\r\n        <Route exact path=\"newsfeed/business\" component={Business} />\r\n        <Route exact path=\"newsfeed/entertainment\" component={Entertainment} />\r\n        <Route exact path=\"newsfeed/health\" component={Health} />\r\n        <Route exact path=\"newsfeed/science\" component={Science} />\r\n        <Route exact path=\"newsfeed/sports\" component={Sports} />\r\n        <Route exact path=\"newsfeed/technology\" component={Technology} />\r\n\r\n        <Route exact path=\"/about\" component={About} />\r\n\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Drawer, Navigation, Content, Header} from 'react-mdl';\nimport Main from './components/Main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <div style={{height: '100vh', position: 'relative'}}>\n        \n        <Layout>\n        <div className='header'>\n            <h1>Live News</h1>\n            <img src='./planet.png' alt='planet'/>\n        </div>\n            <Header scroll>\n            \n                <Navigation>\n                    <Link to=\"/top-headlines\"><strong>Top</strong> headlines</Link>\n                    <Link to=\"/business\"><strong>B</strong>usiness</Link>\n                    <Link to=\"/entertainment\"><strong>E</strong>ntertainment</Link>\n                    <Link to=\"/health\"><strong>H</strong>ealth</Link>\n                    <Link to=\"/science\"><strong>S</strong>cience</Link>\n                    <Link to=\"/sports\"><strong>S</strong>ports</Link>\n                    <Link to=\"/technology\"><strong>T</strong>echnology</Link>\n                </Navigation>\n                \n            </Header>\n        <Drawer title=\"Live News\">\n            <Navigation>\n                <Link to=\"/top-headlines\"><strong>Top</strong> headlines</Link>\n                <Link to=\"/business\"><strong>B</strong>usiness</Link>\n                <Link to=\"/entertainment\"><strong>E</strong>ntertainment</Link>\n                <Link to=\"/health\"><strong>H</strong>ealth</Link>\n                <Link to=\"/science\"><strong>S</strong>cience</Link>\n                <Link to=\"/sports\"><strong>S</strong>ports</Link>\n                <Link to=\"/technology\"><strong>T</strong>echnology</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n          <Main />\n        </Content>\n    </Layout>\n</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}